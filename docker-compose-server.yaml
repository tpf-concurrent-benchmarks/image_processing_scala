version: "3.7"

services:
  graphite:
    image: graphiteapp/graphite-statsd:1.1.10-4
    volumes:
      - "./statsd.config.js:/opt/statsd/config/udp.js:ro"
      - "./statsd.config.js:/opt/statsd/config/tcp.js:ro"
      - "./graphite.storage-schemas.conf:/opt/graphite/conf/storage-schemas.conf:ro"
      - "./graphite:/opt/graphite/storage/:rw"
    ports:
      - "8080:8080"
      - "8125:8125/udp"

  grafana:
    image: grafana/grafana:latest
    ports:
      - "8081:3000"
    volumes:
      - "grafana_config:/var/lib/grafana"
    depends_on:
      - graphite

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.0
    command: >
      -storage_driver="statsd"
      -storage_driver_host="graphite:8125"
      -storage_driver_db="cadvisor"
      -storage_driver_buffer_duration="10s"
      --enable_metrics=cpu,cpuLoad,disk,diskIO,memory,network
    ports:
      - "8888:8080"
    depends_on:
      - graphite
    volumes:
      - "/:/rootfs:ro"
      - "/var/run:/var/run:rw"
      - "/sys:/sys:ro"
      - "/var/lib/docker/:/var/lib/docker:ro"
      - "/dev/disk/:/dev/disk:ro"

  rabbitmq:
    image: rostov_rabbitmq
    ports:
      - "15672:15672"
      - "5672:5672"
    volumes:
      - type: bind
        source: ./containers/rabbitmq/definitions.json
        target: /definitions.json
        read_only: true
    deploy:
      restart_policy:
        condition: none
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 5s
      timeout: 3s
      retries: 10
      start_period: 50s

  format_worker:
    image: image_processing_scala_format_worker
    depends_on:
      - rabbitmq
      - graphite
    volumes:
      - type: bind
        source: ./shared
        target: /app/shared
        read_only: false
    deploy:
      replicas: 2
      restart_policy:
        condition: none
    environment:
      - LOCAL=${LOCAL}
      - NODE_ID=format.worker_{{.Task.Slot}}

  resolution_worker:
    image: image_processing_scala_resolution_worker
    depends_on:
      - rabbitmq
      - graphite
    volumes:
      - type: bind
        source: ./shared
        target: /app/shared
        read_only: false
    deploy:
      replicas: 2
      restart_policy:
        condition: none
    environment:
      - LOCAL=${LOCAL}
      - NODE_ID=resolution.worker_{{.Task.Slot}}

  size_worker:
    image: image_processing_scala_size_worker
    depends_on:
      - rabbitmq
      - graphite
    volumes:
      - type: bind
        source: ./shared
        target: /app/shared
        read_only: false
    deploy:
      replicas: 2
      restart_policy:
        condition: none
    environment:
      - LOCAL=${LOCAL}
      - NODE_ID=size.worker_{{.Task.Slot}}

  manager:
    image: image_processing_scala_manager
    depends_on:
      - rabbitmq
      - graphite
    volumes:
      - type: bind
        source: ./shared
        target: /app/shared
        read_only: false
    deploy:
      restart_policy:
        condition: none
    environment:
      - LOCAL=${LOCAL}
      - NODE_ID=manager

volumes:
  grafana_config:
    external: true